// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`graphql build incremental V2 1`] = `
{
  "gql": "query ($from: timestamptz!, $to: timestamptz!) { cicd_Build (where: {refreshedAt: {_gte: $from, _lt: $to}}) { id createdAt endedAt name number origin pipeline { pipelineId: id } refreshedAt startedAt status statusCategory statusDetail uid url } }",
  "name": "cicd_Build",
}
`;

exports[`graphql build incremental V2 2`] = `
{
  "gql": "query ($from: timestamptz!, $to: timestamptz!) { cicd_Build (where: {refreshedAt: {_gte: $from, _lt: $to}}) { id createdAt endedAt name number origin pipeline { id } refreshedAt startedAt status statusCategory statusDetail uid url } }",
  "name": "cicd_Build",
}
`;

exports[`graphql convert to incremental V2 1`] = `
"query incrementalQuery($from: timestamptz!, $to: timestamptz!) {
  vcs_PullRequest(where: {refreshedAt: {_gte: $from, _lt: $to}}) {
    number
    title
    refreshedAt
  }
}"
`;

exports[`graphql convert to incremental V2 2`] = `
"query incrementalQuery($from: timestamptz!, $to: timestamptz!) {
  vcs_PullRequest(where: {refreshedAt: {_gte: $from, _lt: $to}}) {
    number
    title
    refreshedAt
  }
}"
`;

exports[`graphql create incremental queries V2 1`] = `
[
  {
    "gql": "query ($from: timestamptz!, $to: timestamptz!) { cicd_Build (where: {refreshedAt: {_gte: $from, _lt: $to}}) { id createdAt endedAt name number origin pipeline { pipelineId: id } refreshedAt startedAt status statusCategory statusDetail uid url } }",
    "name": "cicd_Build",
  },
  {
    "gql": "query ($from: timestamptz!, $to: timestamptz!) { cicd_Pipeline (where: {refreshedAt: {_gte: $from, _lt: $to}}) { id tags } }",
    "name": "cicd_Pipeline",
  },
  {
    "gql": "query ($from: timestamptz!, $to: timestamptz!) { cicd_Artifact (where: {refreshedAt: {_gte: $from, _lt: $to}}) { id tags uid } }",
    "name": "cicd_Artifact",
  },
]
`;

exports[`graphql create incremental queries V2 2`] = `
[
  {
    "gql": "query ($from: timestamptz!, $to: timestamptz!) { cicd_Build (where: {refreshedAt: {_gte: $from, _lt: $to}}) { id createdAt endedAt name number origin pipeline { id } refreshedAt startedAt status statusCategory statusDetail uid url } }",
    "name": "cicd_Build",
  },
  {
    "gql": "query ($from: timestamptz!, $to: timestamptz!) { cicd_Pipeline (where: {refreshedAt: {_gte: $from, _lt: $to}}) { id tags } }",
    "name": "cicd_Pipeline",
  },
  {
    "gql": "query ($from: timestamptz!, $to: timestamptz!) { cicd_Artifact (where: {refreshedAt: {_gte: $from, _lt: $to}}) { id tags uid } }",
    "name": "cicd_Artifact",
  },
]
`;

exports[`graphql create incremental queries V2 3`] = `
[
  {
    "gql": "query ($from: timestamptz!, $to: timestamptz!) { cicd_Build (where: {refreshedAt: {_gte: $from, _lt: $to}}) { id createdAt endedAt name number origin refreshedAt startedAt status statusCategory statusDetail uid url } }",
    "name": "cicd_Build",
  },
  {
    "gql": "query ($from: timestamptz!, $to: timestamptz!) { cicd_Pipeline (where: {refreshedAt: {_gte: $from, _lt: $to}}) { id tags } }",
    "name": "cicd_Pipeline",
  },
  {
    "gql": "query ($from: timestamptz!, $to: timestamptz!) { cicd_Artifact (where: {refreshedAt: {_gte: $from, _lt: $to}}) { id tags uid } }",
    "name": "cicd_Artifact",
  },
]
`;

exports[`graphql create incremental queries V2 when missing expected field 2`] = `"expected missing_field to be a reference field of cicd_Pipeline (foreign key to cicd_Organization)"`;

exports[`graphql create incremental queries V2 with primary keys/references 1`] = `
[
  {
    "gql": "query ($from: timestamptz!, $to: timestamptz!) { cicd_Build (where: {refreshedAt: {_gte: $from, _lt: $to}}) { id name pipeline { organization { source uid } uid } uid url } }",
    "name": "cicd_Build",
  },
  {
    "gql": "query ($from: timestamptz!, $to: timestamptz!) { cicd_Pipeline (where: {refreshedAt: {_gte: $from, _lt: $to}}) { id name organization { source uid } uid url } }",
    "name": "cicd_Pipeline",
  },
  {
    "gql": "query ($from: timestamptz!, $to: timestamptz!) { cicd_Organization (where: {refreshedAt: {_gte: $from, _lt: $to}}) { id description name origin source uid url } }",
    "name": "cicd_Organization",
  },
  {
    "gql": "query ($from: timestamptz!, $to: timestamptz!) { cicd_Repository (where: {refreshedAt: {_gte: $from, _lt: $to}}) { id description name organization { source uid } origin uid url } }",
    "name": "cicd_Repository",
  },
  {
    "gql": "query ($from: timestamptz!, $to: timestamptz!) { cicd_Deployment (where: {refreshedAt: {_gte: $from, _lt: $to}}) { id source statusCategory statusDetail uid url } }",
    "name": "cicd_Deployment",
  },
]
`;

exports[`graphql excludes foreign key (scalar) identifier from selection 1`] = `
[
  {
    "gql": "query ($from: timestamptz!, $to: timestamptz!) { cicd_Pipeline (where: {refreshedAt: {_gte: $from, _lt: $to}}) { id name organization { source uid } uid url } }",
    "name": "cicd_Pipeline",
  },
  {
    "gql": "query ($from: timestamptz!, $to: timestamptz!) { cicd_Organization (where: {refreshedAt: {_gte: $from, _lt: $to}}) { id description name origin source uid url } }",
    "name": "cicd_Organization",
  },
]
`;

exports[`graphql flatten nodes V2 with lists within lists 1`] = `
[
  {
    "author_identity_name": "roma",
    "author_level": "ninja",
    "author_uid": "Roma-Kyrnis",
    "number": 37,
    "repository_name": "airbyte-connectors",
  },
  {
    "author_identity_name": "matthew",
    "author_level": "master",
    "author_uid": "tovbinm",
    "number": 39,
    "repository_name": "airbyte-connectors",
  },
]
`;
